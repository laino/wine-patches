From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nils Kuhnhenn <kuhnhenn.nils@gmail.com>
Date: Fri, 24 Feb 2017 02:18:48 +0100
Subject: [PATCH 7/7] wined3d: use SwitchToThread() and calls to select() in
 busy-loops

---
 dlls/wined3d/cs.c              | 14 +++++++++++-
 dlls/wined3d/wined3d_private.h | 52 ++++++++++++++++++++++++++++++++++++++++--
 2 files changed, 63 insertions(+), 3 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 683cf91c6b..9b5115d1a4 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -555,6 +555,9 @@ void wined3d_cs_emit_present(struct wined3d_cs *cs, struct wined3d_swapchain *sw
 
 static void wined3d_cs_exec_clear(struct wined3d_cs *cs, const void *data)
 #else  /* STAGING_CSMT */
+    LARGE_INTEGER spin_start;
+    spin_start.QuadPart = 0;
+
     pending = InterlockedIncrement(&cs->pending_presents);
 
     cs->ops->submit(cs);
@@ -568,7 +571,10 @@ static void wined3d_cs_exec_clear(struct wined3d_cs *cs, const void *data)
      * In Counter-Strike: Source a frame difference of 3 causes noticable
      * input delay that makes the game unplayable. */
     while (pending > 1)
+    {
+        wined3d_cs_mt_yield(&spin_start);
         pending = InterlockedCompareExchange(&cs->pending_presents, 0, 0);
+    }
 }
 
 static UINT wined3d_cs_exec_clear(struct wined3d_cs *cs, const void *data)
@@ -3126,8 +3132,11 @@ static void wined3d_cs_mt_submit(struct wined3d_cs *cs)
 static void wined3d_cs_mt_submit_and_wait(struct wined3d_cs *cs)
 {
     struct wined3d_cs_block *block;
+    LARGE_INTEGER spin_start;
     BOOL fence = FALSE;
 
+    spin_start.QuadPart = 0;
+
     if (cs->thread_id == GetCurrentThreadId())
         return wined3d_cs_st_submit(cs);
 
@@ -3141,7 +3150,10 @@ static void wined3d_cs_mt_submit_and_wait(struct wined3d_cs *cs)
 
     /* A busy wait should be fine, we're not supposed to have to wait very
      * long. */
-    while (!InterlockedCompareExchange(&fence, TRUE, TRUE));
+    while (!InterlockedCompareExchange(&fence, TRUE, TRUE))
+    {
+        wined3d_cs_mt_yield(&spin_start);
+    }
 }
 
 static void wined3d_cs_mt_submit_delayed(struct wined3d_cs *cs)
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index d0188971af..79b6f0401d 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2817,10 +2817,47 @@ static inline void wined3d_resource_release(struct wined3d_resource *resource)
     InterlockedDecrement(&resource->access_count);
 }
 
+#define WINED3D_YIELD_SPIN_TIME  1000 /* 1000 = 0.1 milliseconds = 100 microseconds */
+
+static LARGE_INTEGER wined3d_cs_mt_yield(LARGE_INTEGER *spin_start)
+{
+    struct timeval tv;
+    LARGE_INTEGER now, diff;
+
+    NtQuerySystemTime(&now);
+
+    if (spin_start->QuadPart <= 0)
+        spin_start->QuadPart = now.QuadPart;
+
+    diff.QuadPart = now.QuadPart - spin_start->QuadPart;
+
+    if (diff.QuadPart > WINED3D_YIELD_SPIN_TIME)
+    {
+        tv.tv_sec = 0;
+        tv.tv_usec = 9;
+        select( 0, NULL, NULL, NULL, &tv);
+    }
+    else
+        SwitchToThread();
+
+    return diff;
+}
+
 #if !defined(STAGING_CSMT)
+
 static inline void wined3d_resource_wait_idle(struct wined3d_resource *resource)
 {
-    while (InterlockedCompareExchange(&resource->access_count, 0, 0));
+#if defined(STAGING_CSMT)
+    LARGE_INTEGER spin_start;
+    spin_start.QuadPart = 0;
+#endif /* STAGING_CSMT */
+
+    while (InterlockedCompareExchange(&resource->access_count, 0, 0))
+    {
+#if defined(STAGING_CSMT)
+        wined3d_cs_mt_yield(&spin_start);
+#endif /* STAGING_CSMT */
+    }
 }
 
 #endif /* STAGING_CSMT */
@@ -3306,8 +3343,19 @@ struct wined3d_cs
 
 static inline void wined3d_resource_wait_idle(struct wined3d_resource *resource)
 {
+#if defined(STAGING_CSMT)
+    LARGE_INTEGER spin_start;
+    spin_start.QuadPart = 0;
+#endif /* STAGING_CSMT */
+
     if (resource->device->cs->thread_id == GetCurrentThreadId()) return;
-    while (InterlockedCompareExchange(&resource->access_count, 0, 0));
+
+    while (InterlockedCompareExchange(&resource->access_count, 0, 0))
+    {
+#if defined(STAGING_CSMT)
+        wined3d_cs_mt_yield(&spin_start);
+#endif /* STAGING_CSMT */
+    }
 }
 #endif /* STAGING_CSMT */
 
-- 
2.12.0

